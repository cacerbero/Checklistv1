{"mappings":"ACCA,MAAM,EAAiB,CACrB,gBACA,yBACA,wBACA,qBACA,4BACA,iCACA,iCACD,CAED,KAAK,gBAAgB,CAAC,UAAW,AAAC,IAChC,EAAM,SAAS,CACb,OAAO,IAAI,CAbI,sBAcV,IAAI,CAAC,AAAC,GACI,EAAM,MAAM,CAAC,GACnB,KAAK,CAAC,AAAC,IACJ,QAAQ,KAAK,CAAC,kBAAmB,EACrC,IAEH,KAAK,CAAC,AAAC,IACJ,QAAQ,KAAK,CAAC,oBAAqB,EAEvC,GAER,GAEA,KAAK,gBAAgB,CAAC,QAAS,AAAC,IAC9B,EAAM,WAAW,CACf,OACG,KAAK,CAAC,EAAM,OAAO,EACnB,IAAI,CAAC,AAAC,GAAa,GAAY,MAAM,EAAM,OAAO,GAEzD","sources":["<anon>","service-worker.js"],"sourcesContent":["const CACHE_NAME = \"to-do-pwa-cache-v1\";\nconst FILES_TO_CACHE = [\n    \"/Checklistv1/\",\n    \"Checklistv1/index.html\",\n    \"Checklistv1/style.css\",\n    \"Checklistv1/app.js\",\n    \"Checklistv1/manifest.json\",\n    \"Checklistv1/icons/icon-128.png\",\n    \"Checklistv1/icons/icon-512.png\"\n];\nself.addEventListener(\"install\", (event)=>{\n    event.waitUntil(caches.open(CACHE_NAME).then((cache)=>{\n        return cache.addAll(FILES_TO_CACHE).catch((error)=>{\n            console.error('Caching failed:', error);\n        });\n    }).catch((error)=>{\n        console.error('Cache open failed', error);\n    }));\n});\nself.addEventListener(\"fetch\", (event)=>{\n    event.respondWith(caches.match(event.request).then((response)=>response || fetch(event.request)));\n});\n\n//# sourceMappingURL=service-worker.js.map\n","const CACHE_NAME = \"to-do-pwa-cache-v1\";\r\nconst FILES_TO_CACHE = [\r\n  \"/Checklistv1/\",\r\n  \"Checklistv1/index.html\",\r\n  \"Checklistv1/style.css\",\r\n  \"Checklistv1/app.js\",\r\n  \"Checklistv1/manifest.json\",\r\n  \"Checklistv1/icons/icon-128.png\",\r\n  \"Checklistv1/icons/icon-512.png\",\r\n];\r\n\r\nself.addEventListener(\"install\", (event) => {\r\n  event.waitUntil(\r\n    caches.open(CACHE_NAME)\r\n        .then((cache) => {\r\n            return cache.addAll(FILES_TO_CACHE)\r\n            .catch((error) => {\r\n                console.error('Caching failed:', error);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            console.error('Cache open failed', error);\r\n\r\n        })\r\n  );\r\n});\r\n\r\nself.addEventListener(\"fetch\", (event) => {\r\n  event.respondWith(\r\n    caches\r\n      .match(event.request)\r\n      .then((response) => response || fetch(event.request))\r\n  );\r\n});\r\n"],"names":["FILES_TO_CACHE","self","addEventListener","event","waitUntil","caches","open","then","cache","addAll","catch","error","console","respondWith","match","request","response","fetch"],"version":3,"file":"service-worker.js.map"}